name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: The full version string, i.e. 2024.0.0-alpha-1 or 2024.1.1
        required: true

jobs:
  build-docker:
    strategy:
      fail-fast: false
      matrix:
        include:
          - container: wpilib/roborio-cross-ubuntu:2024-22.04
            artifact-name: Athena
            build-options: "-Ponlylinuxathena"

          - container: wpilib/ubuntu-base:22.04
            artifact-name: Linux
            build-options: ""
    name: "Build - ${{ matrix.artifact-name }}"
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: ./

      - name: Fetch all history and metadata
        run: |
          git config --global --add safe.directory /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}

      - name: Set version
        run: sed -i "s/0.0.0/${{ github.event.inputs.version }}/g" publish.gradle
        working-directory: ./

      - name: Build with Gradle
        run: ./gradlew build -PreleaseMode ${{ matrix.build-options }}
        working-directory: ./

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: build/allOutputs

  build-host:
    env: 
      MACOSX_DEPLOYMENT_TARGET: 13
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2022
            os-name: windows
            artifact-name: Win64
            architecture: x64
        #   - os: macos-14
        #     os-name: macos
        #     artifact-name: macOS
        #     architecture: x64
    name: "Build - ${{ matrix.artifact-name }}"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Fetch all history and metadata
        run: git fetch --prune --unshallow
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          architecture: ${{ matrix.architecture }}

      - name: Set version
        if: ${{ matrix.os-name != 'macos' }}
        run: sed -i "s/0.0.0/${{ github.event.inputs.version }}/g" publish.gradle
        working-directory: ./
    
      - name: Set version (mac)
        if: ${{ matrix.os-name == 'macos' }}
        run: sed -i '' "s/0.0.0/${{ github.event.inputs.version }}/g" publish.gradle
        working-directory: ./
      
      - name: Build with Gradle
        run: ./gradlew build -Pbuildalldesktop -PreleaseMode
        working-directory: ./

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: build/allOutputs

  combine:
    name: Combine
    needs: [build-docker, build-host]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: wpilibsuite/build-tools

      - uses: actions/download-artifact@v4
        with:
          path: combiner/products/build/allOutputs

      - name: Flatten Artifacts
        run: rsync -a --delete combiner/products/build/allOutputs/*/* combiner/products/build/allOutputs/
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Combine
        run: ./gradlew publish -Pthirdparty
        working-directory: combiner

      - uses: actions/upload-artifact@v4
        with:
          name: Maven
          path: ~/releases