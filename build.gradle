plugins {
    id 'cpp'
    id 'java'
    id 'google-test'
    id 'com.diffplug.spotless' version '6.11.0'
    id 'edu.wpi.first.wpilib.repositories.WPILibRepositoriesPlugin' version '2020.2'
    id 'edu.wpi.first.NativeUtils' version '2024.7.2'
    id 'edu.wpi.first.GradleJni' version '1.1.0'
    id 'edu.wpi.first.GradleVsCode' version '2.1.0'
}

repositories {
    mavenCentral()
}

wpilibRepositories.addAllReleaseRepositories(project)
wpilibRepositories.addAllDevelopmentRepositories(project)

// Apply C++ configuration
apply from: 'config.gradle'

// Set up exports properly
nativeUtils {
    exportsConfigs {
        // Main library is just default empty. This will export everything
        OvertureLib {
        }
    }
}

model {
    components {
        OvertureLib(NativeLibrarySpec) {
            sources {
                cpp {
                    source {
                        srcDirs 'src/main/native/cpp'
                        include '**/*.cpp'
                    }
                    exportedHeaders {
                        srcDirs 'src/main/native/include'
                    }
                }
            }

            binaries.all {
                cppCompiler.define('_USE_MATH_DEFINES')
            }

            nativeUtils.useRequiredLibrary(it, 'wpilib_shared')
            nativeUtils.useRequiredLibrary(it, "apriltag_shared")
            nativeUtils.useRequiredLibrary(it, "opencv_shared")
        }

    }
    testSuites {
        OvertureLibTest {
            sources.cpp {
                source {
                    srcDir 'src/test/native/cpp'
                    include '**/*.cpp'
                }
            }

            binaries.all {
                cppCompiler.define('_USE_MATH_DEFINES')
            }

            nativeUtils.useRequiredLibrary(it, "cscore_shared")
            nativeUtils.useRequiredLibrary(it, "cameraserver_shared")
            nativeUtils.useRequiredLibrary(it, "wpilib_executable_shared")
            nativeUtils.useRequiredLibrary(it, "googletest_static")
            nativeUtils.useRequiredLibrary(it, "apriltag_shared")
            nativeUtils.useRequiredLibrary(it, "opencv_shared")
        }
    }
}

spotless {
    cpp {
        target fileTree('.') {
            include '**/*.cpp', '**/*.h'
            exclude '**/build/**', '**/build-*/**'
        }
        eclipseCdt()
        toggleOffOn()
    }
    groovyGradle {
        target fileTree('.') {
            include '**/*.gradle'
            exclude '**/build/**', '**/build-*/**'
        }
        greclipse()
        indentWithSpaces(4)
        trimTrailingWhitespace()
        endWithNewline()
    }
    format 'misc', {
        target fileTree('.') {
            include '**/*.md', '**/.gitignore'
            exclude '**/build/**', '**/build-*/**'
        }
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
    }
}

apply from: 'publish.gradle'

wrapper {
    gradleVersion '8.5'
}
